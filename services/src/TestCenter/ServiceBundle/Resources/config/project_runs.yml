# Test Center - Compliance Testing Application
# Copyright (C) 2012 - 2013 Paulo Ferreira <pf at sourcenotes.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

##
# Project Run Management (service path /project/runs)
##

# Create (Within a Session Project and Working Container)
project_runs_clone:
    pattern:  /clone/{set_id}/{name}/{fv_settings}
    defaults: { _controller: TestCenterServiceBundle:Runs:create, fv_settings: null }
    requirements:
        set_id:  \d+

# Read (By Name or ID)
project_runs_read_id:
    pattern:  /read/{id}
    defaults: { _controller: TestCenterServiceBundle:Runs:read }
    requirements:
        id:  \d+

project_runs_read_name:
    pattern:  /read/{name}
    defaults: { _controller: TestCenterServiceBundle:Runs:readByName }

# Update
project_runs_update:
    pattern:  /update/{id}/{fv_settings}
    defaults: { _controller: TestCenterServiceBundle:Runs:update }
    requirements:
        id:  \d+

# Delete (A Single or All Runs : id == null)
project_runs_delete:
    pattern:  /delete/{id}
    defaults: { _controller: TestCenterServiceBundle:Runs:delete, id: null }
    requirements:
        id:  \d+

# List (In a Single Container or For Project : container_id == null) 
project_runs_list:
    pattern:  /list/{container_id}
    defaults: { _controller: TestCenterServiceBundle:Runs:listContainer, container_id: null }
    requirements:
        container_id:  \d+

# Number of (In a Single Container or For Project : container_id == null) 
project_runs_count:
    pattern:  /count/{container_id}
    defaults: { _controller: TestCenterServiceBundle:Runs:countContainer, container_id: null }
    requirements:
        container_id:  \d+

##
# Run Execution Management (service path /project/runs/run)
##

# Start/Continue Run
project_runs_start:
    pattern:  /run/start/{id}
    defaults: { _controller: TestCenterServiceBundle:RunExecution:startRun}
    requirements:
        id:  \d+


# Close Run
project_runs_close:
    pattern:  /run/close/{id}
    defaults: { _controller: TestCenterServiceBundle:RunExecution:close, id: null } 
    requirements:
        id:  \d+

# Returns Current Sequence Number and Test
project_runs_current:
    pattern:  /run/current/{id}
    defaults: { _controller: TestCenterServiceBundle:RunExecution:current, id: null}
    requirements:
        id:  \d+

# Mark Current Test with Status/Comment and Advance to next Test
project_runs_next:
    pattern:  /run/next/{status}/{code}/{comment}
    defaults: { _controller: TestCenterServiceBundle:RunExecution:next, code: null, comment: null }
    requirements:
        status:  \d+
        code:  \d+

# Position in Run
project_runs_pos:
    pattern:  /run/pos/{sequence}
    defaults: { _controller: TestCenterServiceBundle:RunExecution:position}
    requirements:
        sequence:  \d+

# List Links 
project_runs_link_list:
    pattern:  /run/list/{id}
    defaults: { _controller: TestCenterServiceBundle:RunExecution:linkList, id: null}
    requirements:
        id:  \d+

# Number of Link 
project_runs_link_count:
    pattern:  /run/count/{id}
    defaults: { _controller: TestCenterServiceBundle:RunExecution:linkCount, id: null}
    requirements:
        id:  \d+

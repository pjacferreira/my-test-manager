# Test Center - Compliance Testing Application (Metadata Service)
# Copyright (C) 2012-2014 Paulo Ferreira <pf at sourcenotes.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

##
# Single Organinzation Service Definitions
##
organization:
  default:
    inherit: default
    service: org
    parameters:
      allow: 'organization:*'
    
  #
  # Create Organization Record
  # URL :
  # - org/create/{organization:name}[?field=value-tuplet[&...]]
  #
  create:
    inherit: 'organization:default'
    action: create
    key: 'organization:name'
    parameters:
      exclude: ['organization:id', 'organization:name']
  #
  # Read Organization Record
  # URL : 
  # - org/read/{organization:id}   or
  # - org/read/{organization:name}
  #
  read:    
    inherit: 'organization:default'
    action: read
    keys:
      - 'organization:id'
      - 'organization:name'
    parameters:
      allow: none
  #
  # Update Organization Record
  # URL : 
  # - org/read/{organization:id}?field=value-tuplet[&...]   or
  # - org/read/{organization:name}?field=value-tuplet[&...]
  #
  update:
    inherit: 'organization:default'
    action: update
    keys:
      - 'organization:id'
      - 'organization:name'
    parameters:
      require: true
      exclude: 'organization:id'
  #
  # Delete Organization Record
  # URL : 
  # - org/delete/{organization:id}   or
  # - org/delete/{organization:name}
  #
  delete:
    inherit: 'organization:default'
    action: delete
    keys:
      - 'organization:id'
      - 'organization:name'
    parameters:
      allow: none
    
  #
  # Base for Organization<-->User Actions
  #
  users:
    inherit: default
    service: 
      - org
      - users
    key: 'organization:id'
    key-required: false

  #
  # List Users for the Specified Project / Session Project
  # URL : 
  # - org/users/list[/{organization:id}][?field=value-tuplet[&...]]
  #
  user_list: 
    inherit: 'organization:users'
    action: list
    parameters: 
      allow: ['virtual:filter','virtual:sort','virtual:limit']
  #
  # Count Users for the Specified Project / Session Project
  # URL : 
  # - org/users/count[/{organization:id}][?field=value-tuplet[&...]]
  #
  user_count:
    inherit: 'organization:users'
    action: count
    parameters:
      allow: ['virtual:filter']
    
  #
  # Base for Organization<-->Project Actions
  #
  projects:
    inherit: default
    service: 
      - org
      - projects      
    key: 'organization:id'
    key-required: false

  #
  # List Projects for the Specified User / Session User
  # URL : 
  # - org/projects/list[/{organization:id}][?field=value-tuplet[&...]]
  #
  projects_list: 
    inherit: 'organization:projects'
    action: list
    parameters: 
      allow: ['virtual:filter','virtual:sort','virtual:limit']
  #
  # Count Projects for the Specified User / Session User
  # URL : 
  # - org/projects/count[/{organization:id}][?field=value-tuplet[&...]]
  #
  projects_count:
    inherit: 'organization:projects'
    action: count
    parameters:
      allow: ['virtual:filter']
    
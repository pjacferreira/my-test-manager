# Test Center - Compliance Testing Application (Metadata Service)
# Copyright (C) 2012-2014 Paulo Ferreira <pf at sourcenotes.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

##
# Test Set Entity Forms (Metadata Model)
##
set:
  #
  # Base Test Set Details Form
  #
  details:
    inherit: default
    title: Set Details
    layout: 
      - information
      - grouping
      - description
    widgets:
      information:
        type: group
        label: Information
        layout: ['set:id']
      grouping:
        type: group
        label: Grouping
        layout: ['set:group', 'set:name']
      description:
        type: group
        label: Description
        layout: ['set:description']
  #
  # Create Test Set Details Form
  #
  create_details:
    inherit: 'set:details'
    services:
      create: 'set:create'
  #
  # Display Test Set Details Form
  #
  display_details:
    inherit: 'set:details'
    in: 'set:id'
    services:
      read: 'set:read'
  #
  # Modify Test Set Details Form
  #
  modify_details:
    inherit: 'set:display_details'
    services:
      update: 'set:update'
  #
  # Modify the Tests in a Set
  #
  modify_tests:
    inherit: ':twolists'
    in: 
      - 'set:id' : ~
    title: Modify Tests
    lists: 
      source: 'list\test:project'
      destination: 'list\sets:tests'
    options:
      sortable: true
      onlyone: true
    services:
      update:
        - 'set:clear({set:id})'    
        - 'set:add_list({set:id})'    
  #
  # Display Set Tests Form
  #
  display_tests:
    inherit: default
    in: 'set:id'       
    title: Set Tests
    layout: 
      - settests
    widgets:
      settests:
        type: group
        label: List
        layout: ['list\sets:tests']
  #
  # Create Test Set Form
  #
  create:
    inherit: ':tabbed'
    title: Create Test Set
    layout: ['tab1', 'tab2']
    widgets: 
      tab1: 
        type: form
        form: 'set:create_details'
        overlay: 
          title: Details
      tab2: 
        type: form
        form: 'set:modify_tests'
        overlay: 
          title: Tests
  #
  # Display Test Set Form
  #
  read:
    inherit: ':tabbed'
    in: 'set:id'       
    title: Set Details
    layout: ['tab1', 'tab2']
    widgets: 
      tab1: 
        type: form
        form: 'set:display_details'
        overlay: 
          title: Details
      tab2: 
        type: form
        form: 'set:display_tests'
        overlay: 
          title: Tests
  #
  # Update Test Set Form
  #
  update:
    inherit: ':tabbed'
    in: 'set:id'       
    title: Modify Test Set
    layout: ['tab1', 'tab2']
    widgets: 
      tab1: 
        type: form
        form: 'set:modify_details'
        overlay: 
          title: Details
      tab2: 
        type: form
        form: 'set:modify_tests'
        overlay: 
          title: Tests
  #
  # Test Set Modify State
  #
  modify_state:
    inherit: 'set:default'
    in: 'set:id'       
    title: Modify Test Set's State
    layout: 
      - information
      - grouping
      - state
    services:
      update: 'set:modify_state'
    field_map:
      'set:state': 'state:state'
    widgets:
      description: ~
      state:
        type: group
        label: State
        layout: ['list\sets:list_states']
  #
  # Test Set Modify Owner
  #
  modify_owner:
    inherit: 'set:default'
    in: 'set:id'       
    title: Modify Test Set's Owner
    layout:
      - information
      - grouping
      - owner
    services:
      update: 'set:modify_owner'
    field_map:
      'set:owner\user:id':       'user:id'
      'set:project\project:id':  'project:id'
    widgets:
      description: ~
      owner:
        type: group
        label: Owner
        layout: ['list\project:list_users']
